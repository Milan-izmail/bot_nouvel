from aiogram import Bot, Dispatcher, types
from aiogram.types import (
from keyboards.inline_pie import get_shop_keyboard, get_back_keyboard
from keyboards.replay_pie import get_main_menu_keyboard
ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardButton,
    InlineKeyboardMarkup
)
from aiogram.utils import executor
from aiogram.contrib.fsm_storage.memory import MemoryStorage
import os
from dotenv import load_dotenv

from mono_api import create_payment_url
from intent_matcher import match_intent
from gpt_assistant import ask_gpt
from writeoff_handler import register_writeoff_handlers
from order_handler import register_order_handlers
from tasks_handler import register_task_handlers

# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è ---
load_dotenv()
bot = Bot(token=os.getenv("BOT_TOKEN"))
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)

# --- –ú–µ–Ω—é ---
main_menu = ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.add(
    KeyboardButton("üí≥ –û–ø–ª–∞—Ç–∞"),
    KeyboardButton("üå± –ü–æ—Ä–∞–¥–∏ –ø–æ –¥–æ–≥–ª—è–¥—É"),
    KeyboardButton("üìù –í—ñ–¥–≥—É–∫"),
    KeyboardButton("üöö –î–æ—Å—Ç–∞–≤–∫–∞")
)
main_menu.add(
    KeyboardButton("üì¶ –°–ø–∏—Å–∞–Ω–Ω—è –∫–≤—ñ—Ç—ñ–≤"),
    KeyboardButton("üí¨ –û–Ω–ª–∞–π–Ω-—á–∞—Ç –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞"),
    KeyboardButton("üìù –ó–∞–≤–¥–∞–Ω–Ω—è")
)

# --- Google-–≤—ñ–¥–≥—É–∫–∏ ---
review_keyboard = InlineKeyboardMarkup(row_width=2).add(
    InlineKeyboardButton("–ü–∞—Å–∞–∂", url="https://maps.app.goo.gl/J1nCe2tDGvehh5Nb8"),
    InlineKeyboardButton("–õ–æ–º–æ–Ω–æ—Å–æ–≤–∞", url="https://maps.app.goo.gl/nb1HeQK5JAnSzTHd6"),
    InlineKeyboardButton("–¢–µ—Ä–µ–º–∫–∏", url="https://maps.app.goo.gl/6frLtZkuFHz9tmGJ7"),
    InlineKeyboardButton("–ü—É–ª—é—è", url="https://maps.app.goo.gl/9vq2w9rpnhWYGpB49")
)

# --- /start ---
@dp.message_handler(commands=['start'])
async def handle_start(message: types.Message):
    await message.answer(
        "üëã –í—ñ—Ç–∞—é –∫–æ–º–∞–Ω–¥—É *Nouvel Amour Flowers*!\n\n"
        "–Ø –≤–∞—à –±–æ—Ç-–ø–æ–º—ñ—á–Ω–∏–∫. –ú–æ–∂—É:\n"
        "‚Ä¢ –ù–∞–¥–∞—Ç–∏ –ø–æ—Ä–∞–¥–∏ –ø–æ –¥–æ–≥–ª—è–¥—É üåø\n"
        "‚Ä¢ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –æ–ø–ª–∞—Ç—É üí≥\n"
        "‚Ä¢ –î–∞—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Google-–≤—ñ–¥–≥—É–∫–∏ üìù\n"
        "‚Ä¢ –î–æ–ø–æ–º–æ–≥—Ç–∏ –∑—ñ —Å–ø–∏—Å–∞–Ω–Ω—è–º –∫–≤—ñ—Ç—ñ–≤ üì¶\n"
        "‚Ä¢ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è üìù\n"
        "‚Ä¢ –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç—É —á–∞—Ç –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ üí¨",
        reply_markup=main_menu,
        parse_mode="Markdown"
    )

# --- –û–Ω–ª–∞–π–Ω-—á–∞—Ç –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞ ---
@dp.message_handler(lambda message: message.text == "üí¨ –û–Ω–ª–∞–π–Ω-—á–∞—Ç –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞")
async def handle_support_chat(message: types.Message):
    await message.reply(
        "üì® –û–Ω–ª–∞–π–Ω-—á–∞—Ç –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞:\n"
        "–°–∫–æ–ø—ñ—é–π—Ç–µ –∞–±–æ –ø–µ—Ä–µ—à–ª—ñ—Ç—å —Ü–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—É:\n"
        "üëâ https://widgets.binotel.com/w/chat/pages/?wgt=eNtZkyFjj9JvMSr4IJd0"
    )

# --- –î–æ—Å—Ç–∞–≤–∫–∞ ---
@dp.message_handler(lambda message: message.text == "üöö –î–æ—Å—Ç–∞–≤–∫–∞")
async def handle_delivery(message: types.Message):
    keyboard = InlineKeyboardMarkup().add(
        InlineKeyboardButton("üìã –Ø–∫ –ø–æ—è—Å–Ω–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç—É", callback_data="explain_delivery")
    )
    await message.reply(
        "üöö –ü–æ–ª—ñ—Ç–∏–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ –ö–∏—î–≤—É:\n\n"
        "‚Ä¢ –ë–∞–∑–æ–≤–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ ‚Äî 190 –≥—Ä–Ω\n"
        "‚Ä¢ –í –Ω–µ–≥–æ–¥—É –∞–±–æ –≤ –≥–æ–¥–∏–Ω–∏ –ø—ñ–∫ ‚Äî 290‚Äì390 –≥—Ä–Ω\n"
        "‚Ä¢ –ú–∞–∫—Å–∏–º—É–º –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞ ‚Äî 490 –≥—Ä–Ω\n"
        "‚Ä¢ –ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ ‚Äî –≤—ñ–¥ —Å—É–º–∏ 2500 –≥—Ä–Ω\n"
        "‚Ä¢ –ü—ñ–¥ —á–∞—Å —Ç—Ä–∏–≤–æ–≥–∏ ‚Äî –∑–∞—Ç—Ä–∏–º–∫–∞, –∞–ª–µ –±–µ–∑ –¥–æ–ø–ª–∞—Ç\n"
        "‚Ä¢ –ö–æ–º—Ñ–æ—Ä—Ç –¢–∞—É–Ω ‚Äî —Å–ø–µ—Ü—Ç–∞—Ä–∏—Ñ–∏\n\n"
        "‚úÖ –ú–∏ –ø—Ä–∞–≥–Ω–µ–º–æ —á–µ—Å–Ω–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É –±–µ–∑ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏—Ö –ø–ª–∞—Ç–µ–∂—ñ–≤.",
        reply_markup=keyboard
    )

@dp.callback_query_handler(lambda c: c.data == "explain_delivery")
async def explain_delivery_callback(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(
        callback_query.from_user.id,
        "üìã –Ø–∫ –ø–æ—è—Å–Ω–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç—É:\n\n"
        "‚Äì –û—Å–Ω–æ–≤–Ω–∏–π —Ç–∞—Ä–∏—Ñ: 190 –≥—Ä–Ω\n"
        "‚Äì –í –Ω–µ–≥–æ–¥—É –∞–±–æ –≥–æ–¥–∏–Ω—É –ø—ñ–∫ ‚Äî –¥–æ 490 –≥—Ä–Ω\n"
        "‚Äì –Ø–∫—â–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è > 2500 –≥—Ä–Ω ‚Äî –¥–æ—Å—Ç–∞–≤–∫–∞ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞\n"
        "‚Äì –ú–∏ –Ω–µ –±–µ—Ä–µ–º–æ –¥–æ–ø–ª–∞—Ç –ø—ñ–¥ —á–∞—Å –ø–æ–≤—ñ—Ç—Ä—è–Ω–æ—ó —Ç—Ä–∏–≤–æ–≥–∏\n"
        "‚Äì –û—Å—Ç–∞—Ç–æ—á–Ω–∞ —Ü—ñ–Ω–∞ –∑–∞–≤–∂–¥–∏ –ø–æ–≥–æ–¥–∂—É—î—Ç—å—Å—è –Ω–∞–ø–µ—Ä–µ–¥"
    )

# --- –û–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å ---
fsm_buttons = ["üì¶ –°–ø–∏—Å–∞–Ω–Ω—è –∫–≤—ñ—Ç—ñ–≤", "üìù –ó–∞–≤–¥–∞–Ω–Ω—è"]

@dp.message_handler(lambda msg: msg.text not in fsm_buttons, state=None)
async def handle_message(message: types.Message):
    text = message.text.strip().lower()
    admin_chat_id = -1002580389822
    user_info = f"{message.from_user.full_name} ({message.from_user.id})"
    log_message = f"üì© –ó–∞–ø–∏—Ç –≤—ñ–¥ {user_info}:\n{text}"
    await bot.send_message(admin_chat_id, log_message)

    intent = match_intent(text)

    if intent == "payment_request":
        await message.reply("üí≥ –ù–∞–ø–∏—à—ñ—Ç—å —Å—É–º—É –¥–ª—è –æ–ø–ª–∞—Ç–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ: `–æ–ø–ª–∞—Ç–∞ 300` –∞–±–æ –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ", parse_mode="Markdown")

    elif text.startswith("–æ–ø–ª–∞—Ç–∞") or text.isdigit():
        try:
            amount = int(text.replace("–æ–ø–ª–∞—Ç–∞", "").strip())
            url = create_payment_url(amount)
            if url.startswith("http"):
                keyboard = InlineKeyboardMarkup().add(
                    InlineKeyboardButton(f"–û–ø–ª–∞—Ç–∏—Ç–∏ {amount} –≥—Ä–Ω", url=url)
                )
                await message.reply("‚úÖ –û—Å—å –≤–∞—à–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –æ–ø–ª–∞—Ç–∏:", reply_markup=keyboard)
            else:
                await message.reply(url)
        except Exception:
            await message.reply("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ —Å—É–º—É. –ù–∞–ø–∏—à—ñ—Ç—å —É —Ñ–æ—Ä–º–∞—Ç—ñ: `–æ–ø–ª–∞—Ç–∞ 300` –∞–±–æ –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ.")

    elif intent == "care_advice":
        await message.reply("üå± –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–∑–≤—É –∫–≤—ñ—Ç–∫–∏ –∞–±–æ –≤–∞–∑–æ–Ω–∞, —ñ —è –ø—ñ–¥–∫–∞–∂—É, —è–∫ –∑–∞ –Ω–µ—é –¥–æ–≥–ª—è–¥–∞—Ç–∏.")

    elif intent == "thank_you":
        await message.reply("üíê –†–∞–¥–∏–π –¥–æ–ø–æ–º–æ–≥—Ç–∏! –Ø–∫—â–æ –∫–ª—ñ—î–Ω—Ç –±—É–≤ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–∏–π ‚Äî –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π—Ç–µ –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫:", reply_markup=review_keyboard)

    elif intent == "review_request":
        await message.reply("üìù –û–±–µ—Ä—ñ—Ç—å –º–∞–≥–∞–∑–∏–Ω –¥–ª—è –≤—ñ–¥–≥—É–∫—É:", reply_markup=review_keyboard)

    elif intent == "greeting":
        await message.reply("üëã –ü—Ä–∏–≤—ñ—Ç, –∫–æ–ª–µ–≥–æ! –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –∑ –º–µ–Ω—é –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å, —á–∏–º –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏.")

    else:
        await message.reply("üß† –ì–æ—Ç—É—é –ø–æ—Ä–∞–¥—É... –¢—Ä–æ—Ö–∏ —Ç–µ—Ä–ø—ñ–Ω–Ω—è üåø")
        gpt_reply = ask_gpt(text)
        await message.reply(gpt_reply)

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    register_writeoff_handlers(dp)
    register_order_handlers(dp)
    register_task_handlers(dp, bot, admin_chat_id=-1002580389822)
    executor.start_polling(dp, skip_updates=True)
